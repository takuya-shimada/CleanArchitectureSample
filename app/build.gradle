def versionMajor = 0
def versionMinor = 1
def versionPatch = 1
def versionBuild = 1

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'deploygate'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
        classpath 'com.deploygate:gradle:1.0.4'
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "tyfrontier.cleanarchitecturesample"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }
    signingConfigs {
        debug {
            storeFile rootProject.file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile rootProject.file("release.jks")
            storePassword System.getenv("KEYSTOREPASS") != null ? System.getenv('KEYSTOREPASS') : keystore_pass
            keyAlias "clean_architecture_sample"
            keyPassword System.getenv("KEYSTOREPASS") != null ? System.getenv('KEYSTOREPASS') : keystore_pass
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
        ignoreWarnings true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        incremental !(System.getenv()["CIRCLECI"] as boolean)
        preDexLibraries = !(System.getenv()["CIRCLECI"] as boolean)
        javaMaxHeapSize "1g"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.1.1'

    // http client
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta3'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta3'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta3'

    // ReactiveX
    compile 'io.reactivex:rxjava:1.0.17'
    compile 'io.reactivex:rxandroid:1.1.0'

    // DI
    compile 'com.google.dagger:dagger-compiler:2.0'
    compile 'javax.annotation:javax.annotation-api:1.2'
    compile 'com.google.dagger:dagger:2.0'

    // View Binding
    compile 'com.jakewharton:butterknife:7.0.1'

    // Unit Test
    testCompile 'junit:junit:4.12'
    testCompile('com.android.support.test:runner:0.4.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    testCompile 'org.hamcrest:hamcrest-library:1.3'
}

deploygate {
    userName = "tyfrontier"
    token = System.getenv('DEPLOYGATE_API_TOKEN') != null ? System.getenv('DEPLOYGATE_API_TOKEN') : deploygate_api_token
    apks {
        debug {
            def hash = 'git rev-parse --short HEAD'.execute([], project.rootDir).in.text.trim()
            message = "https://github.com/tyfrontier/CleanArchitectureSample/tree/${hash}"
            distributionKey = "bb433ddad2904b8465500cb62b37980752d7b124"
            sourceFile = file("${project.rootDir}/app/build/outputs/apk/app-debug.apk")
        }
        release {
            def hash = 'git rev-parse --short HEAD'.execute([], project.rootDir).in.text.trim()
            message = "https://github.com/tyfrontier/CleanArchitectureSample/tree/${hash}"
            distributionKey = "bb433ddad2904b8465500cb62b37980752d7b124"
            sourceFile = file("${project.rootDir}/app/build/outputs/apk/app-release.apk")
        }
    }
}
